<?php

/**
 * @file
 * Installation file for the DXMPP module.
 */

/**
 * A random string generator function
 */
function dxmpp_random_string_generator($length = 10) {

  // start with a blank password
  $random_string = "";
  // define possible characters
  $possible = "123456789abcdefghijklmnpqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  // set up a counter
  $i = 0;
  // add random characters to $password until $length is reached
  while ($i < $length) {
    // pick a random character from the possible ones
    $char = substr($possible, mt_rand(0, strlen($possible) - 1), 1);

    // we don't want this character if it's already in the password
    if (!strstr($random_string, $char)) {
      $random_string .= $char;
      $i++;
    }
  }
  // done!
  return $random_string;
}

/**
 * Implementation of hook_install().
 */
function dxmpp_install() {
  $random_string = dxmpp_random_string_generator(10);
  //Random string which will be later on used for password generation.
  variable_set('dxmpp__random_string_for_password', $random_string);
}

function dxmpp_uninstall() {
  variable_del('dxmpp__random_string_for_password');
}

/**
 * Implementation of hook_schema().
 */
function dxmpp_schema() {
  $schema = array();

  $schema['dxmpp_users'] = array(
    'fields' => array(
      'xid' => array(
        'description' => 'The primary identifier for an XMPP record.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'xmpp_username' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The XMPP account username.',
      ),
      'xmpp_password' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
        'default' => '',
        'description' => "The XMPP account password.",
      ),
      'presence' => array(
        'description' => "The XMPP account's preferred presence status, such as Available or Offline.",
        'type' => 'int',
        'not null' => TRUE,
        'default' => 2, // The default is Available.
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the XMPP account was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'deleted' => array(
        'description' => 'Boolean indicating whether the XMPP account is to be deleted on the next cron.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
      'xmpp_username' => array('xmpp_username'),
      'created' => array('created'),
      'deleted' => array('deleted'),
    ),
    'primary key' => array('xid'),
  );
  $schema['dxmpp_roster'] = array(
    'fields' => array(
      'uid' => array(
        'description' => 'The user uid.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'ruid' => array(
        'description' => 'The uid for the reciprocant account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'subscribed' => array(
        'description' => 'Boolean indicating whether the XMPP account has subscribed to the relationship.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'in_roster' => array(
        'description' => 'Boolean indicating whether the relationship appears in the roster of the XMPP account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'to_subscribe' => array(
        'description' => 'Boolean indicating whether the XMPP account is to subscribe to the relationship.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'to_roster' => array(
        'description' => 'Boolean indicating whether the relationship is to appear in the roster of the XMPP account.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
      'ruid' => array('ruid'),
    ),
  );

  return $schema;
}